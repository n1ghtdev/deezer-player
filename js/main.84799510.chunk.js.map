{"version":3,"sources":["webpack:///./src/typings/playlist.ts","webpack:///./src/reducers/playlist.ts","webpack:///./src/typings/player.ts","webpack:///./src/reducers/player.ts","webpack:///./src/reducers/index.ts","webpack:///./src/api.ts","webpack:///./src/actions/player.ts","webpack:///./src/actions/playlist.ts","webpack:///./src/selectors/player.ts","webpack:///./src/hooks/use-player-cache.ts","webpack:///./src/components/container/container.tsx","webpack:///./src/components/layout/layout.tsx","webpack:///./src/components/header/header.tsx","webpack:///./src/components/search-bar/search-bar.tsx","webpack:///./src/utils/format-seconds.ts","webpack:///./src/components/song-list/song-item/icon-playing/icon-playing.tsx","webpack:///./src/components/song-list/song-item/song-item.tsx","webpack:///./src/components/song-list/song-list.tsx","webpack:///./src/selectors/playlist.ts","webpack:///./src/utils/player-utils.ts","webpack:///./src/hooks/use-player.ts","webpack:///./src/components/player/visualizer/visualizer.tsx","webpack:///./src/components/player/controls/controls.tsx","webpack:///./src/components/player/info/info.tsx","webpack:///./src/components/player/volume/volume.tsx","webpack:///./src/components/player/hero/hero.tsx","webpack:///./src/components/player/time/time.tsx","webpack:///./src/components/player/bar/bar.tsx","webpack:///./src/components/player/player.tsx","webpack:///./src/utils/configure-icons.ts","webpack:///./src/utils/configure-store.ts","webpack:///./src/index.tsx","webpack:///./src/App.tsx"],"names":["types","initialState","list","loading","error","pausedAt","state","duration","currentSong","volume","autoplay","reducers","combineReducers","playlist","action","produce","draft","type","PLAYLIST_REQUEST","PLAYLIST_SUCCESS","payload","PLAYLIST_FAILURE","player","prevPlayerState","PLAY","PAUSE","INIT","SET_SONG_REQUEST","songId","SET_SONG_SUCCESS","CHANGE_VOLUME","API_ROOT","headers","searchByArtist","artist","a","url","fetch","method","response","json","ok","Error","pause","setSongRequest","getSongsSuccess","getSongsFailure","getSong","find","song","id","usePlayerCache","dispatch","useDispatch","loadCache","React","useCallback","cache","localStorage","getItem","JSON","parse","console","saveCache","setItem","stringify","err","Container","children","className","Layout","content","aside","Header","title","searchBar","onSubmit","useState","value","setValue","e","preventDefault","onChange","target","placeholder","icon","formatSeconds","seconds","formatToString","secs","toString","padStart","minutes","Math","floor","remainingSeconds","IconPlaying","playing","viewBox","width","height","x","y","SongItem","props","index","active","onChangeSong","isPlaying","useSelector","onClick","SongList","songlist","handleChangeSong","length","map","key","title_short","style","padding","getPrevSong","currentSongId","currentSongIndex","findIndex","lastIndex","getNextSong","createRandomUint8Array","Uint8Array","num","random","createPlayer","dataArray","bufferLength","AudioContext","window","webkitAudioContext","context","analyser","createAnalyser","createAudioContext","audio","Audio","source","createMediaElementSource","setPlayback","time","currentTime","getPlayback","src","getDuration","drawFrame","visualizerCanvas","progressBarCanvas","staticRender","drawVisualizerFrame","drawProgressBarFrame","canvas","canvasCtx","getContext","paused","getByteFrequencyData","barWidth","round","fillStyle","fillRect","i","barHeight","clearRect","gradient","createLinearGradient","addColorStop","actualWidth","fftSize","setSong","songUrl","preload","crossOrigin","connect","destination","disconnect","play","resume","then","log","changeVolume","drawCanvas","isFirstRender","clickPlaybackHandler","canvasRect","this","getBoundingClientRect","clientX","left","prevPlayback","addEventListener","offsetWidth","drawProgressBar","removeEventListener","usePlayer","visualizerRef","progressBarRef","nextSongId","Player","useRef","raf","useEffect","current","cleanup","handleAudioEnded","handleMetaData","cancelAnimationFrame","useLayoutEffect","visualizer","progressBar","Date","now","renderLoop","requestAnimationFrame","elapsed","getCurrentTime","Visualizer","canvasRef","ref","Controls","onPlay","onPause","onPrev","onNext","Info","poster","alt","Volume","onVolumeChange","prevVolume","setPrevVolume","icons","Object","keys","Number","getIconByVolume","min","max","Hero","posterSrc","posterAlt","Time","setCurrentTime","loop","Bar","preview","prevSongId","onPrevSong","onNextSong","album","cover_medium","name","library","add","faBackward","faForward","faPlay","faVolumeDown","faVolumeOff","faVolumeUp","faVolumeMute","faSearch","faPause","composeEnhancers","middlewares","enhancers","store","compose","thunk","applyMiddleware","createStore","mountNode","document","getElementById","render","data","total","getSongsByArtist"],"mappings":"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","file":"js/main.84799510.chunk.js","sourcesContent":["export enum types {\n  PLAYLIST_REQUEST = '@@playlist/request',\n  PLAYLIST_SUCCESS = '@@playlist/success',\n  PLAYLIST_FAILURE = '@@playlist/failure',\n  PREV_SONG = '@@playlist/prev-song',\n  NEXT_SONG = '@@playlist/next-song',\n}\n\nexport type Artist = {\n  id: number;\n  name: string;\n};\n\nexport type Album = {\n  cover_medium: string;\n};\n\nexport type Song = {\n  id: number;\n  title: string;\n  title_short: string;\n  duration: number;\n  preview: string;\n  artist: Partial<Artist>;\n  album: Partial<Album>;\n};\n\nexport type Playlist = {\n  list: Partial<Song>[];\n  loading: boolean;\n  error: Error | boolean;\n};\n","import produce from 'immer';\nimport { Playlist, types } from '@typings/playlist';\nimport { Actions } from '@actions/playlist';\n\nconst initialState: Playlist = {\n  list: [],\n  loading: false,\n  error: false,\n};\n\nexport default function playlistReducer(\n  state: Playlist = initialState,\n  action: Actions,\n) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case types.PLAYLIST_REQUEST: {\n        draft.loading = true;\n        break;\n      }\n      case types.PLAYLIST_SUCCESS: {\n        draft.list = action.payload;\n        draft.loading = false;\n        draft.error = false;\n        break;\n      }\n      case types.PLAYLIST_FAILURE: {\n        draft.loading = false;\n        draft.error = action.error;\n        break;\n      }\n    }\n  });\n}\n","export enum types {\n  PLAY = '@@player/play',\n  PAUSE = '@@player/pause',\n  INIT = '@@player/init',\n  SET_SONG_REQUEST = '@@player/set-song-request',\n  SET_SONG_SUCCESS = '@@player/set-song-success',\n  CHANGE_VOLUME = '@@player/change-volume',\n}\n\nexport type PlayerState = 'playing' | 'paused' | 'loading' | 'loaded';\n\nexport type Player = {\n  pausedAt: number;\n  state: PlayerState;\n  duration: number;\n  currentSong: number | null;\n  volume: number;\n  autoplay: boolean;\n};\n\nexport type InitSongProps = Omit<Player, 'state, autoplay'>;\n","import produce from 'immer';\nimport { Player, types } from '@typings/player';\nimport { Actions } from '@actions/player';\n\nconst initialState: Player = {\n  pausedAt: 0,\n  state: 'loading',\n  duration: 0,\n  currentSong: null,\n  volume: 50,\n  autoplay: false,\n};\n\nexport default function playerReducer(\n  state: Player = initialState,\n  action: Actions\n) {\n  const prevPlayerState = state.state;\n\n  return produce(state, draft => {\n    switch (action.type) {\n      case types.PLAY: {\n        draft.state = 'playing';\n        break;\n      }\n      case types.PAUSE: {\n        draft.pausedAt = action.payload.pausedAt;\n        draft.state = 'paused';\n        break;\n      }\n      case types.INIT: {\n        draft.state = 'loading';\n        draft.currentSong = action.payload.currentSong;\n        draft.pausedAt = action.payload.pausedAt;\n        draft.duration = action.payload.duration;\n        break;\n      }\n      case types.SET_SONG_REQUEST: {\n        if (prevPlayerState === 'playing') {\n          draft.autoplay = true;\n        }\n\n        draft.pausedAt = 0;\n        draft.currentSong = action.payload.songId;\n        draft.state = 'loading';\n        break;\n      }\n      case types.SET_SONG_SUCCESS: {\n        draft.duration = action.payload;\n        draft.state = state.autoplay ? 'playing' : 'loaded';\n        break;\n      }\n      case types.CHANGE_VOLUME: {\n        draft.volume = action.payload;\n        break;\n      }\n    }\n  });\n}\n","import { combineReducers } from 'redux';\nimport playlistReducer from './playlist';\nimport playerReducer from './player';\n\nconst reducers = combineReducers({\n  playlist: playlistReducer,\n  player: playerReducer,\n});\n\nexport type State = ReturnType<typeof reducers>;\nexport default reducers;\n","const API_ROOT = 'https://deezerdevs-deezer.p.rapidapi.com';\n\nconst headers = {\n  'x-rapidapi-host': 'deezerdevs-deezer.p.rapidapi.com',\n  'x-rapidapi-key': '4bHgyOZGbfmshQy4RRvk8yltlP36p1SuZuRjsnus3KfQYCfg1N',\n};\n\nexport async function searchByArtist(artist: string): Promise<any> {\n  const url = `${API_ROOT}/search?q=${artist}`;\n  const response = await fetch(url, {\n    method: 'get',\n    headers,\n  });\n\n  const json = await response.json();\n\n  if (response.ok) {\n    return json;\n  }\n\n  throw new Error(json);\n}\n\nexport async function loadSong(url: string): Promise<any> {\n  const response = await fetch(url, {\n    method: 'get',\n  });\n\n  if (response.ok) {\n    const buffer = await response.arrayBuffer();\n    return buffer;\n  }\n\n  const json = await response.json();\n\n  console.error(json);\n  throw new Error(json);\n}\n","import { types, InitSongProps } from '@typings/player';\n\nexport function play() {\n  return {\n    type: types.PLAY,\n  } as const;\n}\n\nexport function pause({ pausedAt }: { pausedAt: number }) {\n  return {\n    type: types.PAUSE,\n    payload: {\n      pausedAt,\n    },\n  } as const;\n}\n\nexport function initPlayer(payload: InitSongProps) {\n  return {\n    type: types.INIT,\n    payload,\n  } as const;\n}\n\nexport function setSongRequest(songId: number) {\n  return {\n    type: types.SET_SONG_REQUEST,\n    payload: {\n      songId,\n    },\n  } as const;\n}\n\nexport function setSongSuccess(duration: number) {\n  return {\n    type: types.SET_SONG_SUCCESS,\n    payload: duration,\n  } as const;\n}\n\nexport function changeVolume(volume: number) {\n  return {\n    type: types.CHANGE_VOLUME,\n    payload: volume,\n  } as const;\n}\n\nexport type Actions = ReturnType<\n  | typeof play\n  | typeof pause\n  | typeof initPlayer\n  | typeof setSongRequest\n  | typeof setSongSuccess\n  | typeof changeVolume\n>;\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nimport { State } from '@reducers/index';\nimport { types } from '@typings/playlist';\n\nimport { searchByArtist } from '../api';\nimport { setSongRequest, pause } from './player';\n\ntype ThunkResult = ThunkAction<void, State, unknown, Action<string>>;\n\nexport function getSongsByArtist(artist: string): ThunkResult {\n  return async dispatch => {\n    dispatch(getSongsRequest());\n\n    searchByArtist(artist).then(\n      (response: any) => {\n        if (response.data.total !== 0) {\n          dispatch(getSongsSuccess(response.data));\n\n          // pause to prevent from autoplaying\n          dispatch(pause({ pausedAt: 0 }));\n          dispatch(setSongRequest(response.data[0].id));\n        }\n      },\n      (error: Error) => {\n        dispatch(getSongsFailure(error));\n      }\n    );\n  };\n}\n\nfunction getSongsRequest() {\n  return {\n    type: types.PLAYLIST_REQUEST,\n  } as const;\n}\n\nexport function getSongsSuccess(payload: any) {\n  return {\n    type: types.PLAYLIST_SUCCESS,\n    payload,\n  } as const;\n}\n\nexport function getSongsFailure(error: Error) {\n  return {\n    type: types.PLAYLIST_FAILURE,\n    error,\n  } as const;\n}\n\nexport type Actions = ReturnType<\n  typeof getSongsRequest | typeof getSongsSuccess | typeof getSongsFailure\n>;\n","import { State } from '@reducers/index';\nimport { Song } from '@typings/playlist';\n\nexport function getSong(state: State) {\n  if (!state.playlist.list || !state.player) {\n    return;\n  }\n  return state.playlist.list.find(\n    (song: Song) => song.id === state.player.currentSong,\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Player } from '@typings/player';\nimport { Playlist } from '@typings/playlist';\nimport { getSongsSuccess } from '@actions/playlist';\nimport { initPlayer } from '@actions/player';\n\nexport default function usePlayerCache() {\n  const dispatch = useDispatch();\n\n  const loadCache = React.useCallback(() => {\n    try {\n      const cache = localStorage.getItem('audio-player');\n      const { playlist, player } = JSON.parse(cache);\n\n      dispatch(getSongsSuccess(playlist));\n      dispatch(initPlayer(player));\n    } catch (error) {\n      console.error(error);\n    }\n  }, [dispatch]);\n\n  const saveCache = React.useCallback((playlist: Playlist, player: Player) => {\n    if (!playlist.list || !player.currentSong) {\n      return;\n    }\n\n    try {\n      localStorage.setItem(\n        'audio-player',\n        JSON.stringify({ playlist: playlist.list, player })\n      );\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  return {\n    loadCache,\n    saveCache,\n  };\n}\n","import React from 'react';\n\nimport './container.scss';\n\nexport default function Container({ children }: { children: React.ReactNode }) {\n  return <div className=\"container\">{children}</div>;\n}\n","import React from 'react';\n\nimport './layout.scss';\n\ntype Props = {\n  content: React.ReactNode;\n  aside: React.ReactNode;\n};\n\nexport default function Layout({ content, aside }: Props) {\n  return (\n    <div className=\"layout\">\n      <div className=\"layout_content\">{content}</div>\n      <div className=\"layout_aside\">{aside}</div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './header.scss';\n\ntype Props = {\n  title: string;\n  searchBar: React.ReactNode;\n};\n\nexport default function Header({ title, searchBar }: Props) {\n  return (\n    <div className=\"header\">\n      <h1 className=\"header_title\">{title}</h1>\n      {searchBar}\n    </div>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './search-bar.scss';\n\ntype Props = {\n  onSubmit: (query: string) => void;\n};\n\nexport default function Header({ onSubmit }: Props) {\n  const [value, setValue] = React.useState('');\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    onSubmit(value);\n  }\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const target = e.target as HTMLInputElement;\n    setValue(target.value);\n  }\n\n  return (\n    <form className=\"search-bar_form\" onSubmit={handleSubmit}>\n      <input\n        className=\"search-bar_input\"\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"Search\"\n      />\n      <button className=\"search-bar_button\" type=\"submit\">\n        <FontAwesomeIcon icon=\"search\" />\n      </button>\n    </form>\n  );\n}\n","export function formatSeconds(seconds): string {\n  function formatToString(secs): string {\n    return secs.toString().padStart(2, '0');\n  }\n\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n\n  return `${formatToString(minutes)}:${formatToString(remainingSeconds)}`;\n}\n","import React from 'react';\n\nimport './icon-playing.scss';\n\ntype Props = {\n  playing: boolean;\n};\n\nexport default function IconPlaying({ playing }: Props) {\n  return (\n    <svg\n      className={`icon-playing ${playing ? 'active' : ''}`}\n      viewBox=\"0 0 18 17\"\n      width=\"18\"\n      height=\"17\"\n    >\n      <rect\n        className=\"icon-playing_bar icon-playing_bar-1\"\n        width={3}\n        height={9}\n        x={1}\n        y={8}\n      />\n      <rect\n        className=\"icon-playing_bar icon-playing_bar-2\"\n        width={3}\n        height={14}\n        x={5}\n        y={3}\n      />\n      <rect\n        className=\"icon-playing_bar icon-playing_bar-3\"\n        width={3}\n        height={10}\n        x={9}\n        y={7}\n      />\n      <rect\n        className=\"icon-playing_bar icon-playing_bar-4\"\n        width={3}\n        height={6}\n        x={13}\n        y={11}\n      />\n    </svg>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { State } from '@reducers/index';\nimport { formatSeconds } from '@utils/format-seconds';\n\nimport IconPlaying from './icon-playing';\n\nimport './song-item.scss';\n\ntype Props = {\n  title: string;\n  duration: number;\n  index: number;\n  id: number;\n  active: boolean;\n  onChangeSong: (id: number) => void;\n};\n\nexport default function SongItem(props: Props) {\n  const { title, duration, index, id, active, onChangeSong } = props;\n\n  const isPlaying = useSelector(\n    (state: State) => state.player.state === 'playing'\n  );\n\n  function handleChangeSong() {\n    if (active) {\n      return;\n    }\n    onChangeSong(id);\n  }\n  return (\n    <div\n      className={`song-item ${active ? 'active' : ''}`}\n      onClick={handleChangeSong}\n    >\n      <span className=\"song-item_number\">\n        {active ? <IconPlaying playing={isPlaying} /> : index}\n      </span>\n      <span className=\"song-item_name\">{title}</span>\n      <span className=\"song-item_duration\">{formatSeconds(duration)}</span>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Song } from '@typings/playlist';\nimport { setSongRequest } from '@actions/player';\n\nimport SongItem from './song-item';\n\nimport './song-list.scss';\n\ntype Props = {\n  songlist: any;\n  currentSong?: number;\n};\n\nexport default function SongList({ songlist, currentSong }: Props) {\n  const dispatch = useDispatch();\n\n  const handleChangeSong = React.useCallback(\n    (id: number) => {\n      dispatch(setSongRequest(id));\n    },\n    [dispatch]\n  );\n\n  return (\n    <div className=\"song-list\">\n      {songlist.length > 0 ? (\n        songlist.map((song: Song, index: number) => (\n          <SongItem\n            id={song.id}\n            key={song.id}\n            index={index + 1}\n            title={song.title_short}\n            duration={song.duration}\n            active={song.id === currentSong}\n            onChangeSong={handleChangeSong}\n          />\n        ))\n      ) : (\n        <div style={{ padding: '25px' }}>No songs found</div>\n      )}\n    </div>\n  );\n}\n","import { State } from '@reducers/index';\nimport { Song } from '@typings/playlist';\n\nexport function getPrevSong(state: State) {\n  const currentSongId = state.player.currentSong;\n\n  if (!currentSongId) {\n    return;\n  }\n\n  const currentSongIndex = state.playlist.list.findIndex(\n    (song: Song) => song.id === currentSongId,\n  );\n\n  if (currentSongIndex === 0) {\n    const lastIndex = state.playlist.list.length - 1;\n    return state.playlist.list[lastIndex].id;\n  }\n\n  return state.playlist.list[currentSongIndex - 1]?.id;\n}\n\nexport function getNextSong(state: State) {\n  const currentSongId = state.player.currentSong;\n\n  if (!currentSongId) {\n    return;\n  }\n\n  const currentSongIndex = state.playlist.list.findIndex(\n    (song: Song) => song.id === currentSongId,\n  );\n  const lastIndex = state.playlist.list.length - 1;\n\n  if (currentSongIndex === lastIndex) {\n    if (state.playlist.list[0]) {\n      return state.playlist.list[0].id;\n    }\n  }\n\n  return state.playlist.list[currentSongIndex + 1]?.id;\n}\n\nexport function getCurrentSongDuration(state: State) {\n  const currentSong = state.playlist.list.find(\n    (song: Song) => song.id === state.player.currentSong,\n  );\n\n  if (currentSong) {\n    return currentSong.duration;\n  }\n  return 0;\n}\n","function createAudioContext() {\n  (AudioContext as any) =\n    (window as any).AudioContext || (window as any).webkitAudioContext;\n  const context = new AudioContext();\n  const analyser = context.createAnalyser();\n\n  return { context, analyser };\n}\n\nfunction createRandomUint8Array(length: number): Uint8Array {\n  const array = new Uint8Array(length);\n\n  return array.map(\n    (num: number) => Math.floor(Math.random() * (200 - 75 + 1)) + 50\n  );\n}\n\nexport function createPlayer() {\n  const { analyser, context } = createAudioContext();\n  const audio = new Audio();\n  const source = context.createMediaElementSource(audio);\n\n  let dataArray: Uint8Array;\n  let bufferLength: number;\n\n  analyser.fftSize = 1024;\n\n  function setSong(songUrl: string) {\n    audio.preload = 'metadata';\n    audio.src = songUrl;\n    audio.crossOrigin = 'anonymous';\n    source.connect(analyser);\n    analyser.connect(context.destination);\n\n    return () => {\n      analyser.disconnect();\n    };\n  }\n\n  function play() {\n    if (context.state === 'suspended') {\n      context.resume().then(() => {\n        console.log('Audio Context resumed');\n      });\n    }\n\n    if (audio.src) {\n      audio.play();\n    }\n  }\n\n  function pause() {\n    if (!audio.paused && audio.src) {\n      audio.pause();\n    }\n  }\n\n  function changeVolume(volume: number) {\n    audio.volume = volume;\n  }\n\n  function setPlayback(time: number) {\n    audio.currentTime = time;\n  }\n\n  function getPlayback(): number {\n    if (audio.src) {\n      return audio.currentTime;\n    }\n  }\n\n  function getDuration(): number {\n    if (audio.src) {\n      return audio.duration;\n    }\n  }\n\n  function drawCanvas(\n    visualizerCanvas: HTMLCanvasElement,\n    progressBarCanvas: HTMLCanvasElement,\n    isFirstRender: boolean\n  ) {\n    function clickPlaybackHandler(e: MouseEvent) {\n      const canvasRect = this.getBoundingClientRect();\n      const x = e.clientX - canvasRect.left;\n      const prevPlayback = getPlayback();\n      const duration = getDuration();\n\n      setPlayback((x / this.width) * duration);\n\n      if (prevPlayback === 0 && audio.paused) {\n        drawVisualizerFrame(visualizerCanvas, true);\n        drawProgressBarFrame(progressBarCanvas);\n      } else {\n        drawVisualizerFrame(visualizerCanvas);\n        drawProgressBarFrame(progressBarCanvas);\n      }\n    }\n    if (visualizerCanvas && progressBarCanvas) {\n      visualizerCanvas.addEventListener('click', clickPlaybackHandler);\n      progressBarCanvas.addEventListener('click', clickPlaybackHandler);\n\n      drawVisualizer(visualizerCanvas);\n      drawProgressBar(progressBarCanvas);\n      drawFrame(visualizerCanvas, progressBarCanvas, isFirstRender);\n\n      return () => {\n        visualizerCanvas.removeEventListener('click', clickPlaybackHandler);\n        progressBarCanvas.removeEventListener('click', clickPlaybackHandler);\n      };\n    }\n  }\n\n  function drawFrame(\n    visualizerCanvas: HTMLCanvasElement,\n    progressBarCanvas: HTMLCanvasElement,\n    staticRender: boolean = false\n  ) {\n    if (visualizerCanvas && progressBarCanvas) {\n      drawVisualizerFrame(visualizerCanvas, staticRender);\n      drawProgressBarFrame(progressBarCanvas);\n    }\n  }\n\n  function drawVisualizer(canvas: HTMLCanvasElement) {\n    const canvasCtx = canvas.getContext('2d');\n\n    canvas.width = canvas.offsetWidth;\n    canvas.height = 90;\n\n    bufferLength = Math.round(canvas.width / 3);\n\n    canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  function drawVisualizerFrame(\n    canvas: HTMLCanvasElement,\n    staticRender: boolean = false\n  ) {\n    const canvasCtx = canvas.getContext('2d')!;\n\n    if (staticRender) {\n      dataArray = createRandomUint8Array(bufferLength);\n    } else if (!audio.paused) {\n      dataArray = new Uint8Array(bufferLength);\n      analyser.getByteFrequencyData(dataArray);\n    }\n\n    let x = 0;\n    const barWidth = Math.round(canvas.width / bufferLength);\n\n    canvasCtx.fillStyle = 'rgb(255,255,255)';\n    canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n\n    for (let i = 0; i < bufferLength; i++) {\n      let barHeight = (dataArray[i] / 255) * (canvas.height - 25);\n\n      if ((audio.duration / bufferLength) * i < audio.currentTime) {\n        canvasCtx.fillStyle = '#97a9b2';\n        canvasCtx.fillRect(x, 65, 2, -barHeight);\n        canvasCtx.fillStyle = '#EDF0F2';\n        canvasCtx.fillRect(x, 65, 2, (dataArray[i] / 255) * 25);\n      } else {\n        canvasCtx.fillStyle = '#dee7eb';\n        canvasCtx.fillRect(x, 65, 2, -barHeight);\n      }\n\n      x = barWidth * i;\n    }\n  }\n\n  function drawProgressBar(canvas: HTMLCanvasElement) {\n    canvas.width = canvas.offsetWidth;\n    canvas.height = 8;\n  }\n\n  function drawProgressBarFrame(canvas: HTMLCanvasElement) {\n    if (canvas) {\n      const canvasCtx = canvas.getContext('2d');\n\n      canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\n      canvasCtx.fillStyle = '#EDF0F2';\n      canvasCtx.fillRect(0, 0, canvas.width, canvas.height);\n      const gradient = canvasCtx.createLinearGradient(0, 0, canvas.width, 0);\n      gradient.addColorStop(0, '#10b1dc');\n      gradient.addColorStop(1, '#2dd4c7');\n      canvasCtx.fillStyle = gradient;\n      const actualWidth =\n        (audio.currentTime / audio.duration) * canvas.width || 0;\n\n      canvasCtx.fillRect(0, 0, actualWidth, canvas.height);\n    }\n  }\n\n  return {\n    audio,\n    setSong,\n    play,\n    pause,\n    setPlayback,\n    getPlayback,\n    getDuration,\n    changeVolume,\n    drawCanvas,\n    drawFrame,\n  };\n}\n","import React, { MutableRefObject } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setSongRequest, setSongSuccess } from '@actions/player';\nimport { State } from '@reducers/index';\nimport { getNextSong } from '@selectors/playlist';\nimport { createPlayer } from '@utils/player-utils';\n\ntype PlayerProps = {\n  songUrl: string;\n  visualizerRef: MutableRefObject<HTMLCanvasElement>;\n  progressBarRef: MutableRefObject<HTMLCanvasElement>;\n};\n\nexport default function usePlayer<PlayerProps>(\n  songUrl,\n  visualizerRef,\n  progressBarRef\n) {\n  const dispatch = useDispatch();\n  const player = useSelector((state: State) => state.player);\n  const nextSongId = useSelector(getNextSong);\n\n  const Player = React.useRef(createPlayer());\n  const raf = React.useRef(null);\n\n  React.useEffect(() => {\n    if (!songUrl) {\n      return;\n    }\n\n    function handleAudioEnded() {\n      dispatch(setSongRequest(nextSongId));\n    }\n\n    function handleMetaData() {\n      if (player.pausedAt !== 0 && Player.current.audio.paused) {\n        Player.current.setPlayback(player.pausedAt);\n      }\n      dispatch(setSongSuccess(Math.round(Player.current.getDuration())));\n    }\n\n    const audio = Player.current.audio;\n    const cleanup = Player.current.setSong(songUrl);\n    audio.addEventListener('ended', handleAudioEnded);\n    audio.addEventListener('loadedmetadata', handleMetaData);\n\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      cleanup();\n      audio.removeEventListener('ended', handleAudioEnded);\n      audio.removeEventListener('loadedmetadata', handleMetaData);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [songUrl, dispatch, nextSongId]);\n\n  React.useLayoutEffect(() => {\n    const visualizer = visualizerRef.current;\n    const progressBar = progressBarRef.current;\n\n    if (!visualizer || !progressBar || player.state === 'loading') {\n      return;\n    }\n\n    const cleanup = Player.current.drawCanvas(\n      visualizer,\n      progressBar,\n      player.state === 'loaded'\n    );\n\n    return () => cleanup;\n  }, [visualizerRef, progressBarRef, player.state, songUrl]);\n\n  React.useEffect(() => {\n    Player.current.changeVolume(player.volume / 100);\n  }, [player.volume]);\n\n  const play = React.useCallback(() => {\n    let then = 0;\n\n    function renderLoop() {\n      raf.current = requestAnimationFrame(renderLoop);\n\n      let now = Date.now();\n      let elapsed = now - then;\n\n      if (elapsed > 50) {\n        then = now - (elapsed % 50);\n        Player.current.drawFrame(visualizerRef.current, progressBarRef.current);\n      }\n    }\n\n    Player.current.play();\n    then = Date.now();\n    renderLoop();\n  }, [progressBarRef, visualizerRef]);\n\n  const pause = React.useCallback(() => {\n    cancelAnimationFrame(raf.current);\n    Player.current.pause();\n  }, []);\n\n  React.useEffect(() => {\n    if (player.state === 'paused') {\n      pause();\n    } else if (player.state === 'playing') {\n      play();\n    }\n  }, [player.state, dispatch, play, pause, songUrl]);\n\n  function getCurrentTime() {\n    return Player.current.getPlayback();\n  }\n\n  return {\n    getCurrentTime,\n  };\n}\n","import React from 'react';\n\nimport './visualizer.scss';\n\ntype Props = {\n  canvasRef: any;\n};\n\nexport default function Visualizer({ canvasRef }: Props) {\n  return <canvas className=\"visualizer\" ref={canvasRef} height={0}></canvas>;\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './controls.scss';\n\ntype Props = {\n  onPlay: () => void;\n  onPause: () => void;\n  onPrev: () => void;\n  onNext: () => void;\n  isPlaying: boolean;\n};\n\nexport default function Controls(props: Props) {\n  const { onPlay, onPause, onPrev, onNext, isPlaying } = props;\n\n  return (\n    <div className=\"controls\">\n      <button className=\"controls_button\" onClick={onPrev}>\n        <FontAwesomeIcon icon=\"backward\" />\n      </button>\n      {isPlaying ? (\n        <button className=\"controls_button\" onClick={onPause}>\n          <FontAwesomeIcon icon=\"pause\" />\n        </button>\n      ) : (\n        <button className=\"controls_button\" onClick={onPlay}>\n          <FontAwesomeIcon icon=\"play\" />\n        </button>\n      )}\n      <button className=\"controls_button\" onClick={onNext}>\n        <FontAwesomeIcon icon=\"forward\" />\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './info.scss';\n\ntype Props = {\n  poster: string;\n  title: string;\n  artist: string;\n};\n\nexport default function Info(props: Props) {\n  const { poster, title, artist } = props;\n\n  return (\n    <div className=\"info\">\n      <img className=\"info_poster\" src={poster} alt={`${artist} - ${title}`} />\n      <div className=\"info_header\">\n        <h2 className=\"info_title\">{title}</h2>\n        <h3 className=\"info_artist\">{artist}</h3>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { IconName } from '@fortawesome/fontawesome-svg-core';\n\nimport './volume.scss';\n\ntype Props = {\n  onVolumeChange: (volume: number) => void;\n  volume: number;\n};\n\nexport default function Volume({ volume, onVolumeChange }: Props) {\n  const [prevVolume, setPrevVolume] = React.useState(0);\n\n  const icons = {\n    '100': 'volume-up',\n    '50': 'volume-down',\n    '25': 'volume-off',\n    '0': 'volume-mute',\n  };\n  function getIconByVolume(volume: number): string {\n    return icons[\n      Object.keys(icons).find((key: string) => Number(key) >= volume)\n    ];\n  }\n\n  function handleVolumeChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const target = e.target as HTMLInputElement;\n    onVolumeChange(Number(target.value));\n  }\n  return (\n    <div className=\"volume\">\n      <FontAwesomeIcon\n        onClick={() => {\n          if (volume !== 0) {\n            setPrevVolume(volume);\n            onVolumeChange(0);\n          } else {\n            onVolumeChange(prevVolume);\n          }\n        }}\n        className=\"volume_icon\"\n        icon={getIconByVolume(volume) as IconName}\n      />\n      <input\n        className=\"volume_slider\"\n        type=\"range\"\n        value={volume}\n        onChange={handleVolumeChange}\n        min={0}\n        max={100}\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport './hero.scss';\n\ntype Props = {\n  posterSrc: string;\n  posterAlt: string;\n  children: React.ReactNode;\n};\n\nexport default function Hero(props: Props) {\n  const { posterSrc, posterAlt, children } = props;\n\n  return (\n    <div className=\"player_hero\">\n      <div className=\"player_poster\">\n        <img src={posterSrc} alt={posterAlt} />\n      </div>\n      <div className=\"player_hero-content\">{children}</div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '@reducers/index';\nimport { formatSeconds } from '@utils/format-seconds';\n\nimport './time.scss';\n\ntype Props = {\n  getCurrentTime: () => number;\n};\n\nexport default function Time(props: Props) {\n  const { getCurrentTime } = props;\n\n  const player = useSelector((state: State) => state.player);\n  const [currentTime, setCurrentTime] = React.useState(0);\n  const raf = React.useRef(null);\n\n  React.useEffect(() => {\n    let then = 0;\n\n    function loop() {\n      raf.current = requestAnimationFrame(loop);\n\n      let now = Date.now();\n      let elapsed = now - then;\n\n      if (elapsed > 200) {\n        then = now - (elapsed % 200);\n        setCurrentTime(Math.round(getCurrentTime()));\n      }\n    }\n\n    if (player.state !== 'loading') {\n      then = Date.now();\n      loop();\n    }\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, [player.state, player.pausedAt, getCurrentTime]);\n\n  return (\n    <div className=\"player_time\">\n      <div className=\"player_time-current\">{formatSeconds(currentTime)}</div>\n      <div className=\"player_time-duration\">\n        {formatSeconds(player.duration)}\n      </div>\n    </div>\n  );\n}\n","import React, { MutableRefObject } from 'react';\n\nimport './bar.scss';\n\ntype Props = {\n  progressBarRef: MutableRefObject<HTMLCanvasElement>;\n  children: React.ReactNode;\n};\n\nexport default function Bar({ progressBarRef, children }: Props) {\n  return (\n    <div className=\"player-bar\">\n      <canvas\n        height={0}\n        ref={progressBarRef}\n        className=\"player-bar_progressbar\"\n      ></canvas>\n      <div className=\"player-bar_content\">{children}</div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Song } from '@typings/playlist';\nimport { State } from '@reducers/index';\nimport { getPrevSong, getNextSong } from '@selectors/playlist';\nimport { changeVolume, play, pause, setSongRequest } from '@actions/player';\nimport usePlayer from '@hooks/use-player';\n\nimport Visualizer from './visualizer';\nimport Controls from './controls';\nimport Info from './info';\nimport Volume from './volume';\nimport Hero from './hero';\nimport Time from './time';\nimport Bar from './bar';\n\nimport './player.scss';\n\ntype Props = {\n  song: Partial<Song>;\n};\n\nexport default function Player({ song }: Props) {\n  const visualizerRef = React.useRef<HTMLCanvasElement>(null);\n  const progressBarRef = React.useRef<HTMLCanvasElement>(null);\n\n  const { getCurrentTime } = usePlayer(\n    song?.preview,\n    visualizerRef,\n    progressBarRef\n  );\n\n  const dispatch = useDispatch();\n  const player = useSelector((state: State) => state.player);\n  const prevSongId = useSelector(getPrevSong);\n  const nextSongId = useSelector(getNextSong);\n\n  const onPlay = React.useCallback(() => {\n    dispatch(play());\n  }, [dispatch]);\n\n  const onPause = React.useCallback(() => {\n    dispatch(pause({ pausedAt: getCurrentTime() }));\n  }, [dispatch, getCurrentTime]);\n\n  const onPrevSong = React.useCallback(() => {\n    dispatch(setSongRequest(prevSongId));\n  }, [dispatch, prevSongId]);\n\n  const onNextSong = React.useCallback(() => {\n    dispatch(setSongRequest(nextSongId));\n  }, [dispatch, nextSongId]);\n\n  const onVolumeChange = React.useCallback(\n    (volume: number) => {\n      dispatch(changeVolume(volume));\n    },\n    [dispatch]\n  );\n\n  if (!song) {\n    return <div className=\"player\"></div>;\n  }\n\n  return (\n    <div className=\"player\">\n      <Hero posterSrc={song.album.cover_medium} posterAlt={song.title}>\n        <Time getCurrentTime={() => getCurrentTime()} />\n        <Visualizer canvasRef={visualizerRef} />\n      </Hero>\n      <Bar progressBarRef={progressBarRef}>\n        <Controls\n          onPlay={onPlay}\n          onPause={onPause}\n          onPrev={onPrevSong}\n          onNext={onNextSong}\n          isPlaying={player.state === 'playing'}\n        />\n        <Info\n          poster={song.album.cover_medium}\n          title={song.title}\n          artist={song.artist.name}\n        />\n        <Volume onVolumeChange={onVolumeChange} volume={player.volume} />\n      </Bar>\n    </div>\n  );\n}\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n  faBackward,\n  faForward,\n  faPlay,\n  faVolumeUp,\n  faVolumeDown,\n  faVolumeOff,\n  faVolumeMute,\n  faSearch,\n  faPause,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport function configureIcons() {\n  library.add(\n    faBackward,\n    faForward,\n    faPlay,\n    faVolumeDown,\n    faVolumeOff,\n    faVolumeUp,\n    faVolumeMute,\n    faSearch,\n    faPause,\n  );\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '@reducers/index';\n\nexport function configureStore() {\n  let composeEnhancers = compose;\n\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(\n        {},\n      );\n    }\n  }\n\n  const middlewares = [thunk];\n  const enhancers = [applyMiddleware(...middlewares)];\n  const store = createStore(reducers, composeEnhancers(...enhancers));\n\n  return store;\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { configureStore } from '@utils/configure-store';\nimport App from './App';\n\nimport '@styles/global-styles.scss';\n\nconst store = configureStore();\nconst mountNode = document.getElementById('root');\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  mountNode\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getSongsByArtist } from '@actions/playlist';\nimport { State } from '@reducers/index';\nimport { getSong } from '@selectors/player';\nimport { configureIcons } from '@utils/configure-icons';\nimport usePlayerCache from '@hooks/use-player-cache';\n\nimport Container from '@components/container';\nimport Layout from '@components/layout';\nimport Header from '@components/header';\nimport SearchBar from '@components/search-bar';\nimport SongList from '@components/song-list';\nimport Player from '@components/player';\n\nconfigureIcons();\n\nexport default function App() {\n  const playlist = useSelector((state: State) => state.playlist);\n  const player = useSelector((state: State) => state.player);\n  const currentSong = useSelector(getSong);\n\n  const dispatch = useDispatch();\n  const { loadCache, saveCache } = usePlayerCache();\n\n  React.useEffect(() => {\n    loadCache();\n  }, [loadCache]);\n\n  React.useEffect(() => {\n    saveCache(playlist, player);\n  }, [playlist, player, saveCache]);\n\n  function handleSearchSubmit(artist: string) {\n    dispatch(getSongsByArtist(artist));\n  }\n\n  return (\n    <Container>\n      <Header\n        title=\"Visage\"\n        searchBar={<SearchBar onSubmit={handleSearchSubmit} />}\n      />\n\n      <Layout\n        content={<Player song={currentSong} />}\n        aside={\n          <SongList songlist={playlist.list} currentSong={currentSong?.id} />\n        }\n      />\n    </Container>\n  );\n}\n"],"sourceRoot":""}